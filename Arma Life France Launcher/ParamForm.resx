<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>